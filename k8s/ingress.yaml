apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dotmakeup-bird
spec:
  dnsNames:
    - bird.makeup
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  secretName: ssl-cert-bird-dotmakeup
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dotmakeup-kilogram
spec:
  dnsNames:
    - kilogram.makeup
    - ipfs.kilogram.makeup
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  secretName: ssl-cert-kilogram-dotmakeup
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dotmakeup-hacker
spec:
  dnsNames:
    - hacker.makeup
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  secretName: ssl-cert-hacker-dotmakeup
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dotmakeup
  annotations:
    certmanager.k8s.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
spec:
  ingressClassName: "contour"
  tls:
    - hosts:
        - bird.makeup
      secretName: ssl-cert-bird-dotmakeup
    - hosts:
        - kilogram.makeup
        - ipfs.kilogram.makeup
      secretName: ssl-cert-kilogram-dotmakeup
    - hosts:
        - hacker.makeup
      secretName: ssl-cert-hacker-dotmakeup
  rules:
    - host: bird.makeup
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dotmakeup
                port:
                  number: 80
    - host: kilogram.makeup
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dotmakeup-kilo
                port:
                  number: 80
    - host: hacker.makeup
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dotmakeup-hn
                port:
                  number: 80
    - host: ipfs.kilogram.makeup
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ipfs-node
                port:
                  number: 8080
